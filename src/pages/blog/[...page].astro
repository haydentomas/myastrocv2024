---
import { getCollection } from 'astro:content';
import { Picture } from 'astro:assets';
import BaseLayout from '../../layouts/BaseLayout.astro'

// Define a basic structure for the pagination result
type PaginationResult = {
    currentPage: number;
    lastPage: number;
    data: any[]; // Adjust the type to match the structure of your paginated items
    url: {
        prev?: string;
        next?: string;
    };
};


type PaginateFunction = (items: any[], config: { pageSize: number }) => Promise<PaginationResult>;

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
    const pages = await getCollection('posts', ({ data }) => {
        return data.draft !== true; // Filter out drafts if necessary
    });
    return paginate(pages, { pageSize: 3}); // Adjust pageSize as needed
}

const { page }: { page: PaginationInfo } = Astro.props;
const { prev, next } = page.url;

// Define a type for the pagination information
type PaginationInfo = {
    currentPage: number;
    lastPage: number;
    data: PostItem[];
    url: {
        prev?: string;
        next?: string;
    };
};


// Define a type for the individual post item
type PostItem = {
    data: {
        title: string;
        description: string;
        image: string;
        imageAlt: string;
    };
    slug: string;
};

const title = 'Blog - Hayden Tomas - Website Developer';
const description = 'I develop websites and web applications using modern technologies like React, Next.js, and Astro.';
const permalink = `${Astro.url.href}`;
---
<BaseLayout title={title} description={description} permalink={permalink}>

    <main>

        <div class="max-w-full mx-auto">
            {page.data.map(({ data, slug }) => (
                <a href={`/posts/${slug}`} class="block text-black no-underline mb-5">
                    <div class="rounded-lg border border-gray-300 p-4 my-2 grid grid-cols-12 justify-center items-center">
                         <div class=" col-span-3">
                            <Picture formats={['avif', 'webp']} src={data.image} alt={data.imageAlt} height="200" width="300" class="ml-0 rounded-md"/>
                        </div>
                      <div class="col-span-9"> 
                        <h3 class="text-2xl text-white font-bold">{data.title}</h3>
                        <p class="text-white">{data.description}</p></div>
                       
                    </div>
                </a>
            ))}
        </div>
    
        <div class="text-center">
            <p>Page {page.currentPage} of {page.lastPage}</p>
    
            <div class="text-center">
                {prev && <a href={prev} class="button font-sans uppercase font-bold sm:w-auto w-full text-center   bg-indigo-900 hover:bg-purple-600 text-white hover:text-white text-lg px-6 py-2 inline-block rounded-full">Previous Page</a>}
                {next && <a href={next} class="button font-sans uppercase font-bold sm:w-auto w-full text-center   bg-indigo-900 hover:bg-purple-600 text-white hover:text-white text-lg px-6 py-2 inline-block rounded-full">Next Page</a>}
            </div>
        </div>
    </main>
</BaseLayout>